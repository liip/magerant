##################################################
# Generated by phansible.com
##################################################

hostname = "magento.test"

#if ARGV[0] == "up"
#    puts "please define a host name (default: magento.dev)"
#    hostname = STDIN.gets.chomp
#    hostname = "magento.def" if hostname.nil? || hostname.empty?
#end


#If your Vagrant version is lower than 1.5, you can still use this provisioning
#by commenting or removing the line below and providing the config.vm.box_url parameter,
#if it's not already defined in this Vagrantfile. Keep in mind that you won't be able
#to use the Vagrant Cloud and other newer Vagrant features.
Vagrant.require_version ">= 1.5"

# Check to determine whether we're on a windows or linux/os-x host,
# later on we use this to launch ansible in the supported way
# source: https://stackoverflow.com/questions/2108727/which-in-ruby-checking-if-program-exists-in-path-from-ruby
def which(cmd)
    exts = ENV['PATHEXT'] ? ENV['PATHEXT'].split(';') : ['']
    ENV['PATH'].split(File::PATH_SEPARATOR).each do |path|
        exts.each { |ext|
            exe = File.join(path, "#{cmd}#{ext}")
            return exe if File.executable? exe
        }
    end
    return nil
end
Vagrant.configure("2") do |config|



    config.vm.provider :virtualbox do |v|
        v.name = hostname
        v.customize [
            "modifyvm", :id,
            "--name", hostname,
            "--memory", 512,
            "--natdnshostresolver1", "on",
            "--cpus", 1,
        ]
    end

    config.vm.box = "precise64"
    config.vm.box_url = "http://files.vagrantup.com/precise64.box"

    config.vm.network :private_network, type: "dhcp"
    config.vm.host_name = hostname

    config.ssh.forward_agent = true

    #############################################################
    # Ansible provisioning
    #############################################################

    config.vm.provision :shell, path: "ansible/init.sh", args: [hostname]


    #############################################################
    #load hostmanager
    #############################################################
    if Vagrant.has_plugin?("vagrant-hostmanager")
        config.hostmanager.enabled = true
        config.hostmanager.manage_host = true
            config.hostmanager.ignore_private_ip = false
              config.hostmanager.ip_resolver = proc do |vm, resolving_vm|
                if hostname = (vm.ssh_info && vm.ssh_info[:host])
                  `vagrant ssh -c "/sbin/ifconfig eth1" | grep "inet addr" | tail -n 1 | egrep -o "[0-9\.]+" | head -n 1 2>&1`.split("\n").first[/(\d+\.\d+\.\d+\.\d+)/, 1]
                end
              end
    end

    
    config.vm.synced_folder "./", "/vagrant", type: "nfs"
end
